{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8E109fEBCB08FfDE46236eFce80Ac5919Ec3B8dd",
    "txHash": "0x5437cfba9d6f4f9be472256ee64126f75a284b25fe4b47a2a283c5d549f65bee"
  },
  "proxies": [
    {
      "address": "0xdDa10e6c956A1201f4EEA2C54C8e6590b8958EFB",
      "txHash": "0x6ec7e083d763b1a45519b1b0e466a01f3e62333ba8319431dfce1af6433def4b",
      "kind": "transparent"
    },
    {
      "address": "0x3eD3c77AFf440b66f7ADc9dEE6C08ce8CAea467c",
      "txHash": "0x51320fca04a13b64f69a4c519e8f2eb87805fe019465d28e9fa2b356ff22cab0",
      "kind": "transparent"
    },
    {
      "address": "0x356874F67d349aa69B7d076BcaA2bC682E67257A",
      "txHash": "0xc2bb982465d273ec14f8e757117c3f7172452330c3ed37d5e65d547f31f32542",
      "kind": "transparent"
    },
    {
      "address": "0x3D67DED22EBe5c893CEe806A4D8001A66279cE2C",
      "txHash": "0xdb81298737667b22cd2a8760fe27e1b01b6ac964b1ec75e6a5ee3970aa0f1338",
      "kind": "transparent"
    },
    {
      "address": "0xE6450f9645922dC843d6BecEa319584573ddE8f3",
      "txHash": "0x3c6fd544e49b003e0bf085ad7821f9e10a7c4e493d5372ee112cebd0b3d1e2db",
      "kind": "transparent"
    },
    {
      "address": "0x655582e2F461DF81B31463aC661354642b4c47D8",
      "txHash": "0x4cbd532e6594b04f4e5968b5aee0636d30e6bc92fb095a677799b9374ff7bf20",
      "kind": "transparent"
    },
    {
      "address": "0x8852677b8DD7c9a36637022EF59408A78D77e0cb",
      "txHash": "0x44ff17c589019de9295614a20146c53ecb33b44bda5bde3a0d2a556d194a78c8",
      "kind": "transparent"
    },
    {
      "address": "0x86F2133F8e3Ec23FCC108E7898f448EDa1204018",
      "txHash": "0x894b9b62be78a5f8b69e7259f39df6a60e8e9ed020c9f3a020ac91a3559dd75f",
      "kind": "transparent"
    },
    {
      "address": "0x6991eEE7e2b176423bdd81F5131D3f68bEaE0326",
      "txHash": "0xd1c82033531d69801c2f26e63b0efae2159e73ac819417ed7ec093646847fe4a",
      "kind": "transparent"
    },
    {
      "address": "0x8cfBF9B64163B1dE5E4d945A14cF2DBcD8087137",
      "txHash": "0xb1022a91747ff232783400bde9bc4c49a14af54427b85d9ac93d8e84a19243b7",
      "kind": "transparent"
    },
    {
      "address": "0x1e0DED2a038d3efF12e48Ab2655c7E63a30108Bf",
      "txHash": "0xc274c0ef5b3f82ee9d1a252bd82393b46c60cb1ed01cc41c6c4ba1405fe07b55",
      "kind": "transparent"
    },
    {
      "address": "0xa7d35eBfe0d65B85863C3e4F05f4C90eA147d2ba",
      "txHash": "0x03a212374ad17dbdf4de5160e4bdea144b658f384f1c5c0fd6239ae90705f5df",
      "kind": "transparent"
    },
    {
      "address": "0x8345f38aEdd5b1D481fEBa301548AD740D17579D",
      "txHash": "0x38f77539cf28f93b7e945cd487f4a55751e6a264e5fafd85fb4d6d352d216998",
      "kind": "transparent"
    },
    {
      "address": "0x1B001215bD08f6d1c7B4260503cc4D3568380E82",
      "txHash": "0x8ba5de704c3a63b91cbef560a0a47daf4e6c3f6e5ac573bd4d25d5ea5709f01a",
      "kind": "transparent"
    },
    {
      "address": "0xEC4d634FDB2EE14782D2354B485aA166464c2631",
      "txHash": "0x007dfe37450b5a56a2d4f82689ac8a6af48f6b940433e3a3564264bfc5f40652",
      "kind": "transparent"
    },
    {
      "address": "0x628862b3d7c53EE6F0a27fe400d82682e2687D19",
      "txHash": "0xe72976aa5f9122c95cb6cf38aebf96c63a61b398ad35b6863898f0156fcb3010",
      "kind": "transparent"
    },
    {
      "address": "0x5F33F6252323B7432B9e417D6801cA5209E93539",
      "txHash": "0x1b67551b0515a681585ff04704190ed061cdd0a863602343c339d0bd57921e3e",
      "kind": "transparent"
    },
    {
      "address": "0x3dDa69F39901999fdE7f1621B6d46d5763a3eC88",
      "txHash": "0xd6562d9a6886cb1e03ef56e30030255c4de18c880c61881e567f6ae58a5f8b77",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f7465f7a65aea7132def0ad458f0b680330cb06b0e7dfb884c2e752b0830098d": {
      "address": "0xF768a3bEbBE7f4df6d1685619A8Fc92266A7cBc6",
      "txHash": "0xa3a2df8515bb1e8260ee7cef17431ce59510b7d77cfceb993d3d1bac52fe4553",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "RewardsMachine",
            "label": "controlAccount",
            "type": "t_address",
            "src": "../project:/contracts/RewardsMachine.sol:19"
          },
          {
            "contract": "RewardsMachine",
            "label": "nextRewardsPayment",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:21"
          },
          {
            "contract": "RewardsMachine",
            "label": "maxISSSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:22"
          },
          {
            "contract": "RewardsMachine",
            "label": "maxBonusPools",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:23"
          },
          {
            "contract": "RewardsMachine",
            "label": "rewardsRound",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:25"
          },
          {
            "contract": "RewardsMachine",
            "label": "lastRewardsRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/RewardsMachine.sol:26"
          },
          {
            "contract": "RewardsMachine",
            "label": "governanceToken",
            "type": "t_contract(GovernanceToken)4611",
            "src": "../project:/contracts/RewardsMachine.sol:28"
          },
          {
            "contract": "RewardsMachine",
            "label": "votingEscrow",
            "type": "t_contract(VotingEscrow)13337",
            "src": "../project:/contracts/RewardsMachine.sol:29"
          },
          {
            "contract": "RewardsMachine",
            "label": "voteMachine",
            "type": "t_contract(VoteMachine)11483",
            "src": "../project:/contracts/RewardsMachine.sol:30"
          },
          {
            "contract": "RewardsMachine",
            "label": "USDCaddress",
            "type": "t_address",
            "src": "../project:/contracts/RewardsMachine.sol:34"
          },
          {
            "contract": "RewardsMachine",
            "label": "voteMachineAddress",
            "type": "t_address",
            "src": "../project:/contracts/RewardsMachine.sol:36"
          },
          {
            "contract": "RewardsMachine",
            "label": "assetFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/RewardsMachine.sol:37"
          },
          {
            "contract": "RewardsMachine",
            "label": "marketFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/RewardsMachine.sol:38"
          },
          {
            "contract": "RewardsMachine",
            "label": "masterChefAddress",
            "type": "t_address",
            "src": "../project:/contracts/RewardsMachine.sol:39"
          },
          {
            "contract": "RewardsMachine",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:40"
          },
          {
            "contract": "RewardsMachine",
            "label": "LPRewardTokenNumber",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:41"
          },
          {
            "contract": "RewardsMachine",
            "label": "votingRewardTokenNumber",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:42"
          },
          {
            "contract": "RewardsMachine",
            "label": "ISSBonusPoolAdded",
            "type": "t_bool",
            "src": "../project:/contracts/RewardsMachine.sol:43"
          },
          {
            "contract": "RewardsMachine",
            "label": "poolExists",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/RewardsMachine.sol:44"
          },
          {
            "contract": "RewardsMachine",
            "label": "numberOfPools",
            "type": "t_uint256",
            "src": "../project:/contracts/RewardsMachine.sol:45"
          },
          {
            "contract": "RewardsMachine",
            "label": "ISSPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/RewardsMachine.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(GovernanceToken)4611": {
            "label": "contract GovernanceToken"
          },
          "t_contract(VotingEscrow)13337": {
            "label": "contract VotingEscrow"
          },
          "t_contract(VoteMachine)11483": {
            "label": "contract VoteMachine"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d0526c277d719fb425aef20870f5dddfc4f643e0e06ec1aac99075afb5fd6135": {
      "address": "0xfB3Cf84D137e0d67185b40CB5e81DC09aac22a6d",
      "txHash": "0xbc90aa09ab62a6c0e7687af7c28898071442b54e461bdd0f3056a7c3df1fc99f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "AssetFactory",
            "label": "feePool",
            "type": "t_uint256",
            "src": "../project:/contracts/assetFactory.sol:24"
          },
          {
            "contract": "AssetFactory",
            "label": "assetNumber",
            "type": "t_uint256",
            "src": "../project:/contracts/assetFactory.sol:25"
          },
          {
            "contract": "AssetFactory",
            "label": "USDCaddress",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:26"
          },
          {
            "contract": "AssetFactory",
            "label": "tokenFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:27"
          },
          {
            "contract": "AssetFactory",
            "label": "voteMachineAddress",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:28"
          },
          {
            "contract": "AssetFactory",
            "label": "rewardsMachineAddress",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:29"
          },
          {
            "contract": "AssetFactory",
            "label": "marketFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:30"
          },
          {
            "contract": "AssetFactory",
            "label": "marketRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:31"
          },
          {
            "contract": "AssetFactory",
            "label": "ISSAddress",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:32"
          },
          {
            "contract": "AssetFactory",
            "label": "assets",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "../project:/contracts/assetFactory.sol:33"
          },
          {
            "contract": "AssetFactory",
            "label": "controlAccount",
            "type": "t_address",
            "src": "../project:/contracts/assetFactory.sol:34"
          },
          {
            "contract": "AssetFactory",
            "label": "getAsset",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Asset)15524_storage)",
            "src": "../project:/contracts/assetFactory.sol:35"
          },
          {
            "contract": "AssetFactory",
            "label": "harvestCooldown",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/assetFactory.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Asset)15524_storage)": {
            "label": "mapping(string => struct issuaaLibrary.Asset)"
          },
          "t_struct(Asset)15524_storage": {
            "label": "struct issuaaLibrary.Asset",
            "members": [
              {
                "label": "Token1",
                "type": "t_address"
              },
              {
                "label": "Token2",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "upperLimit",
                "type": "t_uint256"
              },
              {
                "label": "endOfLifeValue",
                "type": "t_uint256"
              },
              {
                "label": "expiryTime",
                "type": "t_uint256"
              },
              {
                "label": "frozen",
                "type": "t_bool"
              },
              {
                "label": "expired",
                "type": "t_bool"
              },
              {
                "label": "exists",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "fc01185996defe09f7d98aed86174878d5301fe23b608499ca40157e71c5e1e7": {
      "address": "0x760341e9764B208290Ae2c3F3D46C9918af97812",
      "txHash": "0xdd6fe5b3abf0d00a95f82e0fd8e0e845f879635d8cab22161a75fd5b79e81ad9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "VoteMachine",
            "label": "controlAccount",
            "type": "t_address",
            "src": "../project:/contracts/VoteMachine.sol:10"
          },
          {
            "contract": "VoteMachine",
            "label": "assetFactory",
            "type": "t_contract(AssetFactory)14664",
            "src": "../project:/contracts/VoteMachine.sol:11"
          },
          {
            "contract": "VoteMachine",
            "label": "votingEscrow",
            "type": "t_contract(VotingEscrow)13337",
            "src": "../project:/contracts/VoteMachine.sol:12"
          },
          {
            "contract": "VoteMachine",
            "label": "assetFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/VoteMachine.sol:13"
          },
          {
            "contract": "VoteMachine",
            "label": "rewardsMachineAddress",
            "type": "t_address",
            "src": "../project:/contracts/VoteMachine.sol:14"
          },
          {
            "contract": "VoteMachine",
            "label": "DAOAddress",
            "type": "t_address",
            "src": "../project:/contracts/VoteMachine.sol:15"
          },
          {
            "contract": "VoteMachine",
            "label": "UpdaterAddress",
            "type": "t_address",
            "src": "../project:/contracts/VoteMachine.sol:16"
          },
          {
            "contract": "VoteMachine",
            "label": "DAOVolume",
            "type": "t_uint256",
            "src": "../project:/contracts/VoteMachine.sol:17"
          },
          {
            "contract": "VoteMachine",
            "label": "lastVoteID",
            "type": "t_uint256",
            "src": "../project:/contracts/VoteMachine.sol:18"
          },
          {
            "contract": "VoteMachine",
            "label": "lastFreezeVoteIDBySymbol",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/VoteMachine.sol:19"
          },
          {
            "contract": "VoteMachine",
            "label": "freezeVotesByID",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/VoteMachine.sol:20"
          },
          {
            "contract": "VoteMachine",
            "label": "allFreezeVotesByID",
            "type": "t_mapping(t_uint256,t_struct(freezeVoteDetails)9679_storage)",
            "src": "../project:/contracts/VoteMachine.sol:21"
          },
          {
            "contract": "VoteMachine",
            "label": "hasVoted",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/VoteMachine.sol:22"
          },
          {
            "contract": "VoteMachine",
            "label": "rewardPointsSnapshots",
            "type": "t_mapping(t_uint256,t_struct(rewardPointsSnapshot)9763_storage)",
            "src": "../project:/contracts/VoteMachine.sol:24"
          },
          {
            "contract": "VoteMachine",
            "label": "currentRewardsRound",
            "type": "t_uint256",
            "src": "../project:/contracts/VoteMachine.sol:25"
          },
          {
            "contract": "VoteMachine",
            "label": "getFreezeVotes",
            "type": "t_mapping(t_string_memory_ptr,t_struct(FreezeVotes)9723_storage)",
            "src": "../project:/contracts/VoteMachine.sol:26"
          },
          {
            "contract": "VoteMachine",
            "label": "getEndOfLifeVotes",
            "type": "t_mapping(t_string_memory_ptr,t_struct(endOfLifeVotes)9753_storage)",
            "src": "../project:/contracts/VoteMachine.sol:27"
          },
          {
            "contract": "VoteMachine",
            "label": "rewardPoints",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/VoteMachine.sol:28"
          },
          {
            "contract": "VoteMachine",
            "label": "freezeVotesToCheck",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(individualFreezeVote)9672_storage)dyn_storage))",
            "src": "../project:/contracts/VoteMachine.sol:30"
          },
          {
            "contract": "VoteMachine",
            "label": "freezeVoteResults",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/VoteMachine.sol:31"
          },
          {
            "contract": "VoteMachine",
            "label": "lastExpiryVoteIDBySymbol",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/VoteMachine.sol:33"
          },
          {
            "contract": "VoteMachine",
            "label": "expiryVotesByID",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/VoteMachine.sol:34"
          },
          {
            "contract": "VoteMachine",
            "label": "allExpiryVotesByID",
            "type": "t_mapping(t_uint256,t_struct(expiryVoteDetails)9693_storage)",
            "src": "../project:/contracts/VoteMachine.sol:35"
          },
          {
            "contract": "VoteMachine",
            "label": "expiryVotesToCheck",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(individualExpiryVote)9686_storage)dyn_storage))",
            "src": "../project:/contracts/VoteMachine.sol:36"
          },
          {
            "contract": "VoteMachine",
            "label": "expiryVoteResults",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/VoteMachine.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(AssetFactory)14664": {
            "label": "contract AssetFactory"
          },
          "t_contract(VotingEscrow)13337": {
            "label": "contract VotingEscrow"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(freezeVoteDetails)9679_storage)": {
            "label": "mapping(uint256 => struct VoteMachine.freezeVoteDetails)"
          },
          "t_struct(freezeVoteDetails)9679_storage": {
            "label": "struct VoteMachine.freezeVoteDetails",
            "members": [
              {
                "label": "voteResult",
                "type": "t_bool"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(rewardPointsSnapshot)9763_storage)": {
            "label": "mapping(uint256 => struct VoteMachine.rewardPointsSnapshot)"
          },
          "t_struct(rewardPointsSnapshot)9763_storage": {
            "label": "struct VoteMachine.rewardPointsSnapshot",
            "members": [
              {
                "label": "votingRewardpoints",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "votingRewardAddresses",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "totalVotingRewardPoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_string_memory_ptr,t_struct(FreezeVotes)9723_storage)": {
            "label": "mapping(string => struct VoteMachine.FreezeVotes)"
          },
          "t_struct(FreezeVotes)9723_storage": {
            "label": "struct VoteMachine.FreezeVotes",
            "members": [
              {
                "label": "voteID",
                "type": "t_uint256"
              },
              {
                "label": "startingTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256"
              },
              {
                "label": "noVotes",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "hasvoted",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "voteNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_struct(endOfLifeVotes)9753_storage)": {
            "label": "mapping(string => struct VoteMachine.endOfLifeVotes)"
          },
          "t_struct(endOfLifeVotes)9753_storage": {
            "label": "struct VoteMachine.endOfLifeVotes",
            "members": [
              {
                "label": "voteID",
                "type": "t_uint256"
              },
              {
                "label": "startingTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "numberOfVotingShares",
                "type": "t_uint256"
              },
              {
                "label": "totalVoteValue",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "hasvoted",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "voteNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(individualFreezeVote)9672_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct VoteMachine.individualFreezeVote[]))"
          },
          "t_mapping(t_address,t_array(t_struct(individualFreezeVote)9672_storage)dyn_storage)": {
            "label": "mapping(address => struct VoteMachine.individualFreezeVote[])"
          },
          "t_array(t_struct(individualFreezeVote)9672_storage)dyn_storage": {
            "label": "struct VoteMachine.individualFreezeVote[]"
          },
          "t_struct(individualFreezeVote)9672_storage": {
            "label": "struct VoteMachine.individualFreezeVote",
            "members": [
              {
                "label": "voteID",
                "type": "t_uint256"
              },
              {
                "label": "vote",
                "type": "t_bool"
              },
              {
                "label": "votingPoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_uint256,t_struct(expiryVoteDetails)9693_storage)": {
            "label": "mapping(uint256 => struct VoteMachine.expiryVoteDetails)"
          },
          "t_struct(expiryVoteDetails)9693_storage": {
            "label": "struct VoteMachine.expiryVoteDetails",
            "members": [
              {
                "label": "voteResult",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(individualExpiryVote)9686_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct VoteMachine.individualExpiryVote[]))"
          },
          "t_mapping(t_address,t_array(t_struct(individualExpiryVote)9686_storage)dyn_storage)": {
            "label": "mapping(address => struct VoteMachine.individualExpiryVote[])"
          },
          "t_array(t_struct(individualExpiryVote)9686_storage)dyn_storage": {
            "label": "struct VoteMachine.individualExpiryVote[]"
          },
          "t_struct(individualExpiryVote)9686_storage": {
            "label": "struct VoteMachine.individualExpiryVote",
            "members": [
              {
                "label": "voteID",
                "type": "t_uint256"
              },
              {
                "label": "vote",
                "type": "t_uint256"
              },
              {
                "label": "votingPoints",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a102fdc1b73abf11069e7e8de28e5efc9b43cfe2c7ada7a2b8007f5f90c56992": {
      "address": "0xC8f9dc2872577cb9A3Bf6aa79370E1d5A821900F",
      "txHash": "0xc822d2d584eb7539958768730f22ac880f5b5137cd530616782fda2886c9b670",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "DAO",
            "label": "voteMachine",
            "type": "t_contract(VoteMachine)11483",
            "src": "../project:/contracts/DAO.sol:17"
          },
          {
            "contract": "DAO",
            "label": "votingEscrow",
            "type": "t_contract(VotingEscrow)13337",
            "src": "../project:/contracts/DAO.sol:18"
          },
          {
            "contract": "DAO",
            "label": "assetFactory",
            "type": "t_contract(AssetFactory)14664",
            "src": "../project:/contracts/DAO.sol:19"
          },
          {
            "contract": "DAO",
            "label": "governanceToken",
            "type": "t_contract(GovernanceToken)4611",
            "src": "../project:/contracts/DAO.sol:20"
          },
          {
            "contract": "DAO",
            "label": "numberOfGrantVotes",
            "type": "t_uint256",
            "src": "../project:/contracts/DAO.sol:21"
          },
          {
            "contract": "DAO",
            "label": "numberOfNewAssetVotes",
            "type": "t_uint256",
            "src": "../project:/contracts/DAO.sol:22"
          },
          {
            "contract": "DAO",
            "label": "grantVoteAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/DAO.sol:23"
          },
          {
            "contract": "DAO",
            "label": "newAssetVoteSymbols",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "../project:/contracts/DAO.sol:24"
          },
          {
            "contract": "DAO",
            "label": "DAOVolume",
            "type": "t_uint256",
            "src": "../project:/contracts/DAO.sol:25"
          },
          {
            "contract": "DAO",
            "label": "getGrantVotes",
            "type": "t_mapping(t_address,t_struct(grantFundingVotes)3258_storage)",
            "src": "../project:/contracts/DAO.sol:48"
          },
          {
            "contract": "DAO",
            "label": "hasVoted",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/DAO.sol:73"
          },
          {
            "contract": "DAO",
            "label": "getNewAssetVotes",
            "type": "t_mapping(t_string_memory_ptr,t_struct(newAssetVotes)3301_storage)",
            "src": "../project:/contracts/DAO.sol:75"
          },
          {
            "contract": "DAO",
            "label": "lastVoteID",
            "type": "t_uint256",
            "src": "../project:/contracts/DAO.sol:78"
          },
          {
            "contract": "DAO",
            "label": "lastGrantVoteIDByReceiver",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/DAO.sol:79"
          },
          {
            "contract": "DAO",
            "label": "lastNewAssetVoteIDBySymbol",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/DAO.sol:80"
          },
          {
            "contract": "DAO",
            "label": "allGrantVotesByID",
            "type": "t_mapping(t_uint256,t_struct(grantVoteDetails)3339_storage)",
            "src": "../project:/contracts/DAO.sol:82"
          },
          {
            "contract": "DAO",
            "label": "allNewAssetVotesByID",
            "type": "t_mapping(t_uint256,t_struct(newAssetVoteDetails)3346_storage)",
            "src": "../project:/contracts/DAO.sol:83"
          }
        ],
        "types": {
          "t_contract(VoteMachine)11483": {
            "label": "contract VoteMachine"
          },
          "t_contract(VotingEscrow)13337": {
            "label": "contract VotingEscrow"
          },
          "t_contract(AssetFactory)14664": {
            "label": "contract AssetFactory"
          },
          "t_contract(GovernanceToken)4611": {
            "label": "contract GovernanceToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(grantFundingVotes)3258_storage)": {
            "label": "mapping(address => struct DAO.grantFundingVotes)"
          },
          "t_struct(grantFundingVotes)3258_storage": {
            "label": "struct DAO.grantFundingVotes",
            "members": [
              {
                "label": "voteID",
                "type": "t_uint256"
              },
              {
                "label": "startingTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256"
              },
              {
                "label": "noVotes",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "hasvoted",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "voteNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_struct(newAssetVotes)3301_storage)": {
            "label": "mapping(string => struct DAO.newAssetVotes)"
          },
          "t_struct(newAssetVotes)3301_storage": {
            "label": "struct DAO.newAssetVotes",
            "members": [
              {
                "label": "voteID",
                "type": "t_uint256"
              },
              {
                "label": "startingTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256"
              },
              {
                "label": "noVotes",
                "type": "t_uint256"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "upperLimit",
                "type": "t_uint256"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "hasvoted",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "voteNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(grantVoteDetails)3339_storage)": {
            "label": "mapping(uint256 => struct DAO.grantVoteDetails)"
          },
          "t_struct(grantVoteDetails)3339_storage": {
            "label": "struct DAO.grantVoteDetails",
            "members": [
              {
                "label": "voteResult",
                "type": "t_bool"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(newAssetVoteDetails)3346_storage)": {
            "label": "mapping(uint256 => struct DAO.newAssetVoteDetails)"
          },
          "t_struct(newAssetVoteDetails)3346_storage": {
            "label": "struct DAO.newAssetVoteDetails",
            "members": [
              {
                "label": "voteResult",
                "type": "t_bool"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3493df2b8bdd68437f9f61b99c4143060093ae3dc00808517f0d88ccb6c361b0": {
      "address": "0xE7EF5F44DD32C6C12a4Bd33818b94DED1bE5477f",
      "txHash": "0x1e2dc03be5989cb0f6d857aba0e210a409c873a6962914e0092e6467f07e8281",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "MarketFactory",
            "label": "controlAccount",
            "type": "t_address",
            "src": "../project:/contracts/MarketFactory.sol:18"
          },
          {
            "contract": "MarketFactory",
            "label": "feeTo",
            "type": "t_address",
            "src": "../project:/contracts/MarketFactory.sol:19"
          },
          {
            "contract": "MarketFactory",
            "label": "feeToSetter",
            "type": "t_address",
            "src": "../project:/contracts/MarketFactory.sol:20"
          },
          {
            "contract": "MarketFactory",
            "label": "rewardsMachineAddress",
            "type": "t_address",
            "src": "../project:/contracts/MarketFactory.sol:21"
          },
          {
            "contract": "MarketFactory",
            "label": "USDCAddress",
            "type": "t_address",
            "src": "../project:/contracts/MarketFactory.sol:23"
          },
          {
            "contract": "MarketFactory",
            "label": "getPair",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "../project:/contracts/MarketFactory.sol:25"
          },
          {
            "contract": "MarketFactory",
            "label": "allPairs",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/MarketFactory.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "907b45c4f3c8a00deb88f5050cb3c2a2e8029d15bc2569fc24722709d3befdc8": {
      "address": "0x3430C537991a95DbBF33E8fA5C848218eaf94d39",
      "txHash": "0xc1aec44c87358f255712b23cc1c437eb69c9168fb12255b60e3bc2a85cbe21bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "Upgrader",
            "label": "voteMachine",
            "type": "t_contract(VoteMachine)11483",
            "src": "../project:/contracts/Upgrader.sol:20"
          },
          {
            "contract": "Upgrader",
            "label": "votingEscrow",
            "type": "t_contract(VotingEscrow)13337",
            "src": "../project:/contracts/Upgrader.sol:23"
          },
          {
            "contract": "Upgrader",
            "label": "proxyAdminAddress",
            "type": "t_address",
            "src": "../project:/contracts/Upgrader.sol:24"
          },
          {
            "contract": "Upgrader",
            "label": "numberOfUpgradeVotes",
            "type": "t_uint256",
            "src": "../project:/contracts/Upgrader.sol:25"
          },
          {
            "contract": "Upgrader",
            "label": "upgradeVoteAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Upgrader.sol:26"
          },
          {
            "contract": "Upgrader",
            "label": "isValidContract",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Upgrader.sol:27"
          },
          {
            "contract": "Upgrader",
            "label": "contractAddresses",
            "type": "t_mapping(t_string_memory_ptr,t_address_payable)",
            "src": "../project:/contracts/Upgrader.sol:28"
          },
          {
            "contract": "Upgrader",
            "label": "getUpgradeVotes",
            "type": "t_mapping(t_address,t_struct(upgradeVotes)8899_storage)",
            "src": "../project:/contracts/Upgrader.sol:51"
          },
          {
            "contract": "Upgrader",
            "label": "hasVoted",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/Upgrader.sol:53"
          },
          {
            "contract": "Upgrader",
            "label": "lastVoteID",
            "type": "t_uint256",
            "src": "../project:/contracts/Upgrader.sol:57"
          },
          {
            "contract": "Upgrader",
            "label": "lastUpgradeVoteIDByImplementationAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Upgrader.sol:58"
          },
          {
            "contract": "Upgrader",
            "label": "allUpgradeVotesByID",
            "type": "t_mapping(t_uint256,t_struct(upgradeVoteDetails)8928_storage)",
            "src": "../project:/contracts/Upgrader.sol:61"
          }
        ],
        "types": {
          "t_contract(VoteMachine)11483": {
            "label": "contract VoteMachine"
          },
          "t_contract(VotingEscrow)13337": {
            "label": "contract VotingEscrow"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_address_payable)": {
            "label": "mapping(string => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(upgradeVotes)8899_storage)": {
            "label": "mapping(address => struct Upgrader.upgradeVotes)"
          },
          "t_struct(upgradeVotes)8899_storage": {
            "label": "struct Upgrader.upgradeVotes",
            "members": [
              {
                "label": "voteID",
                "type": "t_uint256"
              },
              {
                "label": "startingTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256"
              },
              {
                "label": "noVotes",
                "type": "t_uint256"
              },
              {
                "label": "contractToUpgrade",
                "type": "t_string_storage"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "hasvoted",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "voteNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(upgradeVoteDetails)8928_storage)": {
            "label": "mapping(uint256 => struct Upgrader.upgradeVoteDetails)"
          },
          "t_struct(upgradeVoteDetails)8928_storage": {
            "label": "struct Upgrader.upgradeVoteDetails",
            "members": [
              {
                "label": "voteResult",
                "type": "t_bool"
              },
              {
                "label": "open",
                "type": "t_bool"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
